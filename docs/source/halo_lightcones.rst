Reading lightcone halo catalogues
=================================

Approximate lightcone halo catalogues can be generated by running a
halo finder on many simulation snapshots and using particles (such as
black hole particles) from the particle lightcone outputs as tracers to
determine when each halo crosses the lightcone. This is implemented in
the ``lightcone_io.match_black_holes`` module. See
:ref:`halo_lightcones` for details.

Each halo lightcone file contains halos taken from a single simulation
snapshot, which corresponds to a range of redshifts centred on the
snapshot redshift in the lightcone. Within the file the halos are
sorted in order of their pixel index in a low resolution HEALPix
map. This makes it possible to extract halos in particular parts of
the sky.

A halo lightcone file can be opened using the
:py:class:`lightcone_io.HaloLightconeFile` class::

  import lightcone_io as lc
  halos = lc.HaloLightconeFile(filename)

We can get a list of the available halo properties with::

  print(halos.properties)

To read positions and bound masses for all halos in the catalogue, for
example, we can do this::

  # List of halo properties to read
  properties = ("Lightcone/HaloCentre", "BoundSubhalo/TotalMass")

  # Read the data
  halo_props = halos.read(properties)

This returns a dict of numpy arrays with the halo properties. Since
the halos are sorted by HEALPix pixel, it's possible to extract halos
close to a specified position on the sky::

  # Line of sight vector specifying a point on the sky
  vector = (1.0, 0.0, 0.0)

  # Angular radius around this point (in radians)
  radius = np.radians(10.0)

  # List of halo properties to read
  properties = ("Lightcone/HaloCentre", "BoundSubhalo/TotalMass")

  # Read the data
  halo_props = halos.read_halos_in_radius(vector, radius, properties)

Again, this returns a dict of numpy arrays with the halo properties,
but only halos in the specified patch of sky are included.
